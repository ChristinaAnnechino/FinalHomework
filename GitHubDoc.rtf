{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Tahoma;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #Pythonexercises\
\
#Exercise5\
\
\pard\pardeftab720\ri0\sl259\slmult1\sa160\partightenfactor0

\f1 \cf0 numberFound = 0\
x = 11\
while numberFound < 20:\
    if x % 5 == 0 or x % 7 == 0 or x % 11 == 0:\
        print(x)\
        numberFound+=1\
    x+=1\
\
#Exercise6\
#a\
def isPrime(n):\
    for i in range(2,int(n**0.5)+1):\
        if n%i==0:\
            return False\
\
    return True\
#b\
def is_prime(x):\
    if (x > 1):\
      divisor = 2\
      for i in range(divisor,x):\
           if (x % i) == 0:\
               return False\
    else:\
        return False\
    return True\
#c\
for num in range(2,101):\
    if all(num % i!=0 for i in range(2,num)):\
       print(num)\
#d\
r=int(input("Enter upper limit: "))\
for a in range(2,r+1):\
    k=0\
    for i in range(2,a//2+1):\
        if(a%i==0):\
            k=k+1\
    if(k<=0):\
        print(a)\
#this code allows you to enter the amount of values you want to be evaluated, the first n primes you want to see\
\
#Exercise7\
#a\
mylist = [4, 76, 34, 2]\
for element in mylist:\
        print(element)\
#b\
mylist = ['78', '1', '90']\
>>> for elem in mylist:\
        mylist.reverse()\
print(mylist)\
\
#c\
mylist = [1,2,3,4,5,6,7,8,9,12,3,34,45,6,7]\
len(mylist)\
#the len function returns 15, which is the amount of values within the list\
\
#Exercise8\
a = [1,2,3,4,5,6,7]\
b=a\
b[0] = 20\
print(a[0]) #changing b[0] will also change a[0]\
c = a[:]\
c[2] = 20\
print_list(a) #a was not updated after c was changed\
\
def set_first_elem_to_zero(l):\
	l[0] = 0\
	return l\
set_first_elem_to_zero(a)\
print_list(a)\
\
#Exercise9\
def concat(A):\
	l = []\
	for each in A:\
		l += each\
	return l\
print(concat([[7,8,9],[9,8,7],[8]]))\
\
#Exercise10\
import matplotlib\
import matplotlib.pyplot as plt\
import numpy as np\
\
# Data for plotting\
a = np.arange(0.0, 2.0, 0.01)\
b = (np.sin(a - 2) **2) * np.exp(-a **2)\
\
fig, ax = plt.subplots()\
ax.plot(a, b)\
\
ax.set(xlabel='x', ylabel='y', title='Thats all, folks')\
fig.savefig("test.png")\
plt.show()\
\
#Exercise11\
def product_loop(l):\
    p = 1\
    for each in l:\
        p *= each;\
    return p\
\
print(product_loop([4,5,6,7]))\
\
def product_rec(l):\
    if(len(l)==1):\
        return l[0];\
    else:\
        return l[0]*product_rec(l[1:])\
\
print(product_rec([4,5,6,7]))\
\
#Exercise12\
def fib(n):\
    if(n==0):\
        return 0\
    elif(n==1):\
        return 1\
    else:\
        return fib(n-1)+fib(n-2)\
\
print(fib(25))\
\
#Exercise13\
file  = open("emails.txt", "r")\
print(re.search('[a-zA-Z]*@[a-zA-Z]*\\.[a-zA-Z]*', 'asdfd@asfsd.afs'))\
for line in file:\
    match = re.search('[a-zA-Z]+@[a-zA-Z]+\\.[a-zA-Z]+', line)\
    print(match)\
\
\
\
//Functional Programming and SML Exercises\
//Problem2\
\pard\pardeftab720\ri0\partightenfactor0
\cf0 val t = (5, true);\
val t = ([7,8,9], false);\
fun f(int, real) = [false, true];\
\
//Problem3\
\pard\pardeftab720\ri0\qj\partightenfactor0
\cf0 open IntInf;\
\
fun fact_helper (0,r:int) = r\
  | fact_helper (n:int,r:int) = fact_helper (n-1,n*r);\
\
fun factorial n:int = fact_helper(n, 1);\
\
factorial 50;\
\
//the open IntInf function provides arithmetic precision and allows the code to run without the Overflow exception preventing it\
\
//Problem4\
fun fact n = if n=0 then 1\
    else n * fact(n-1);\
fun new_if (a,b,c) = if a then b else c;\
\
fun new_fact n = new_if(n=0,1,n*new_fact(n-1);\
f(x,y) = if x=0 then 0 else f(x-1,f(x,y));\
\
\
//Problem5\
\pard\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\pardeftab720\ri75\sb75\sa75\partightenfactor0
\cf0 map (fn x => 3*x) [34,7,9,6,2,3,4,9];\
\pard\pardeftab720\ri0\qj\partightenfactor0
\cf0 \
//Problem6\
fun insertOne(L)=\
if L=[] then []\
else 1::hd(L)::insertOne(tl(L));\
\
//Problem7\
datatype \'91a Tree = empty|node of\'92 a* \'91a Tree* \'92 a Tree;\
\pard\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\pardeftab720\ri0\partightenfactor0
\cf0 node(2,node(7,node(2,empty,empty),node(6,node(5,empty,empty),node(11,empty,empty))\
\
//Problem8\
mother(linda, paul).\
mother(cathy, andrew).\
mother(cathy, laura).\
female(linda).\
female(cathy).\
female(laura).\
sister(linda, cathy).\
\
\pard\pardeftab720\ri0\sl259\slmult1\sa160\partightenfactor0
\cf0 g(X,Y): -Y is X+5.\
\pard\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\pardeftab720\ri0\partightenfactor0
\cf0 \
\pard\pardeftab720\ri0\qj\partightenfactor0
\cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\b\fs36 \cf0 \
\
\pard\pardeftab720\ri0\sl259\slmult1\sa160\partightenfactor0

\b0\fs24 \cf0 \
\
\
\
}